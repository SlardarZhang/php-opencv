// $Id$
// vim:ft=javascript

ARG_WITH("opencv", "for opencv support", "no");

// Otherwise, use ARG_ENABLE
// ARG_ENABLE("opencv", "enable opencv support", "no");


//当使用--with-opencv或--enable-opencv的时候PHP_OPENCV为yes，否则为no
if (PHP_OPENCV != "no") {
    ADD_FLAG("CFLAGS_OPENCV", "/EHcs");
    ADD_FLAG("CFLAGS_OPENCV", "/D _ALLOW_KEYWORD_MACROS");
    ADD_FLAG("CFLAGS_OPENCV", "/D __STDC_LIMIT_MACROS");

    //检查opencv链接库，如果存在返回路径
    CHECK_LIB("opencv_world450.lib", "opencv","libx86");
    CHECK_HEADER_ADD_INCLUDE("opencv2\\opencv.hpp", "CFLAGS_OPENCV", "include");

    opencv_source_file="php-7\\opencv.cc \
                php-7\\opencv_exception.cc \
                php-7\\source\\opencv2\\core\\hal\\opencv_interface.cc \
                php-7\\source\\opencv2\\core\\opencv_base.cc \
                php-7\\source\\opencv2\\core\\opencv_cvdef.cc \
                php-7\\source\\opencv2\\core\\opencv_type.cc \
                php-7\\source\\opencv2\\core\\opencv_utility.cc \
                php-7\\source\\opencv2\\core\\opencv_persistence.cc \
                php-7\\source\\opencv2\\core\\opencv_mat.cc \
                php-7\\source\\opencv2\\face\\opencv_facerec.cc \
                php-7\\source\\opencv2\\face\\opencv_lbph.cc \
                php-7\\source\\opencv2\\face\\opencv_fisherface.cc \
                php-7\\source\\opencv2\\opencv_face.cc \
                php-7\\source\\opencv2\\opencv_core.cc \
                php-7\\source\\opencv2\\opencv_highgui.cc \
                php-7\\source\\opencv2\\opencv_imgcodecs.cc \
                php-7\\source\\opencv2\\opencv_imgproc.cc \
                php-7\\source\\opencv2\\opencv_ml.cc \
                php-7\\source\\opencv2\\opencv_objdetect.cc \
                php-7\\source\\opencv2\\opencv_videoio.cc"


    EXTENSION("opencv", opencv_source_file,"yes");

    //防止编译链接问题
    ADD_FLAG("CFLAGS_OPENCV", "/D ZEND_WIN32_KEEP_INLINE=1 /U ZEND_WIN32_FORCE_INLINE");


}


